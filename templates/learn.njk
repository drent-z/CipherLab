---
layout: layout.njk
title: Learn Cryptography - CipherLab
---
<section class="hero" id="learn-hero">
    <div class="hero-gradient-container"></div>
    <div class="container">
        <div class="row hero-row">
            <div class="col-12 text-center">
                <h1 class="hero-title glow-text">Learn Cryptography</h1>
                <div class="hero-content">
                    <p class="mb-4 fade-in hero-subtitle">Explore the fascinating world of codes, ciphers, and secure communications</p>
                </div>
                <div class="hero-badges">
                    <span class="module-badge">5 Modules</span>
                    <span class="module-badge">15 Lessons</span>
                    <span class="module-badge">Interactive</span>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="container section">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <!-- Quick Start Guide -->
            <div class="learn-card mb-5">
                <h2 class="section-title text-center mb-4">How to Use This Course</h2>
                <div class="guide-steps">
                    <div class="guide-step">
                        <div class="step-number"><i class="fas fa-1"></i></div>
                        <div class="step-content">
                            <h4>Choose a Module</h4>
                            <p>Select from the five modules below, starting with the fundamentals</p>
                        </div>
                    </div>
                    <div class="guide-step">
                        <div class="step-number"><i class="fas fa-2"></i></div>
                        <div class="step-content">
                            <h4>Start Any Lesson</h4>
                            <p>Click on a lesson title to begin learning about that topic</p>
                        </div>
                    </div>
                    <div class="guide-step">
                        <div class="step-number"><i class="fas fa-3"></i></div>
                        <div class="step-content">
                            <h4>Complete Activities</h4>
                            <p>Each lesson includes interactive demos and quick checks to test your knowledge</p>
                        </div>
                    </div>
                    <div class="guide-step">
                        <div class="step-number"><i class="fas fa-4"></i></div>
                        <div class="step-content">
                            <h4>Track Your Progress</h4>
                            <p>Mark lessons as complete to keep track of your progress through the course</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Progress Tracker -->
            <div class="progress-container mb-5">
                <h3>Your Progress</h3>
                <div class="progress-tracker">
                    <div class="progress-bar-container">
                        <div class="progress-label">
                            <span id="progress-percentage">0%</span> Complete
                        </div>
                        <div class="progress">
                            <div id="quiz-progress-value" class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                    </div>
                    <button id="reset-progress" class="simple-button">Reset Progress</button>
                </div>
            </div>

            <!-- Learning Modules Tabs -->
            <div class="modules-container">
                <h2 class="section-title text-center mb-4">Learning Modules</h2>
                
                <div class="module-roadmap mb-4">
                    <div class="roadmap-track">
                        <div class="roadmap-progress"></div>
                        <div class="roadmap-node active" data-module="module1">
                            <div class="node-icon"><i class="fas fa-book"></i></div>
                            <div class="node-label">1. Fundamentals</div>
                        </div>
                        <div class="roadmap-node" data-module="module2">
                            <div class="node-icon"><i class="fas fa-history"></i></div>
                            <div class="node-label">2. Classical Ciphers</div>
                        </div>
                        <div class="roadmap-node" data-module="module3">
                            <div class="node-icon"><i class="fas fa-lock"></i></div>
                            <div class="node-label">3. Modern Crypto</div>
                        </div>
                        <div class="roadmap-node" data-module="module4">
                            <div class="node-icon"><i class="fas fa-laptop-code"></i></div>
                            <div class="node-label">4. Applications</div>
                        </div>
                        <div class="roadmap-node" data-module="module5">
                            <div class="node-icon"><i class="fas fa-rocket"></i></div>
                            <div class="node-label">5. Advanced Topics</div>
                        </div>
                    </div>
                </div>
                
                <div class="simple-tabs">
                    <div class="tab-header">
                        <button class="tab-button active" data-module="module1">
                            <i class="fas fa-book"></i> 1. Fundamentals
                        </button>
                        <button class="tab-button" data-module="module2">
                            <i class="fas fa-history"></i> 2. Classical Ciphers
                        </button>
                        <button class="tab-button" data-module="module3">
                            <i class="fas fa-lock"></i> 3. Modern Crypto
                        </button>
                        <button class="tab-button" data-module="module4">
                            <i class="fas fa-laptop-code"></i> 4. Applications
                        </button>
                        <button class="tab-button" data-module="module5">
                            <i class="fas fa-rocket"></i> 5. Advanced Topics
                        </button>
                    </div>
                    
                    <div class="tab-content">
                        <!-- Module 1 Content -->
                        <div id="module1-content" class="module-content active">
                            <div class="module-intro">
                                <h3>Module 1: Fundamentals of Cryptography</h3>
                                <p>Learn the basic concepts and principles that form the foundation of cryptography.</p>
                            </div>
                            
                            <div class="lessons-grid">
                                <div class="lesson-box" onclick="showLesson('lesson1-1')">
                                    <div class="lesson-icon">
                                        <i class="fas fa-key"></i>
                                    </div>
                                    <div class="lesson-details">
                                        <h4>What is Cryptography?</h4>
                                        <p>Introduction to secret codes and their importance</p>
                                        <div class="lesson-status">
                                            <i id="status-lesson1-1" class="fas fa-circle"></i> <span>Not started</span>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="lesson-box" onclick="showLesson('lesson1-2')">
                                    <div class="lesson-icon">
                                        <i class="fas fa-sitemap"></i>
                                    </div>
                                    <div class="lesson-details">
                                        <h4>Types of Cryptography</h4>
                                        <p>Exploring different cryptographic approaches</p>
                                        <div class="lesson-status">
                                            <i id="status-lesson1-2" class="fas fa-circle"></i> <span>Not started</span>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="lesson-box" onclick="showLesson('lesson1-3')">
                                    <div class="lesson-icon">
                                        <i class="fas fa-globe"></i>
                                    </div>
                                    <div class="lesson-details">
                                        <h4>Real-World Applications</h4>
                                        <p>How cryptography is used in everyday life</p>
                                        <div class="lesson-status">
                                            <i id="status-lesson1-3" class="fas fa-circle"></i> <span>Not started</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Module 2 Content -->
                        <div id="module2-content" class="module-content">
                            <div class="module-intro">
                                <h3>Module 2: Classical Ciphers</h3>
                                <p>Discover historical encryption methods that laid the groundwork for modern cryptography.</p>
                            </div>
                            
                            <div class="lessons-grid">
                                <div class="lesson-box" onclick="showLesson('lesson2-1')">
                                    <div class="lesson-icon">
                                        <i class="fas fa-shield-alt"></i>
                                    </div>
                                    <div class="lesson-details">
                                        <h4>Caesar Cipher</h4>
                                        <p>The simple shift cipher used in ancient Rome</p>
                                        <div class="lesson-status">
                                            <i id="status-lesson2-1" class="fas fa-circle"></i> <span>Not started</span>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="lesson-box" onclick="showLesson('lesson2-2')">
                                    <div class="lesson-icon">
                                        <i class="fas fa-table"></i>
                                    </div>
                                    <div class="lesson-details">
                                        <h4>Vigenère Cipher</h4>
                                        <p>The "indecipherable" polyalphabetic cipher</p>
                                        <div class="lesson-status">
                                            <i id="status-lesson2-2" class="fas fa-circle"></i> <span>Not started</span>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="lesson-box" onclick="showLesson('lesson2-3')">
                                    <div class="lesson-icon">
                                        <i class="fas fa-random"></i>
                                    </div>
                                    <div class="lesson-details">
                                        <h4>Substitution Cipher</h4>
                                        <p>Replacing letters with other symbols</p>
                                        <div class="lesson-status">
                                            <i id="status-lesson2-3" class="fas fa-circle"></i> <span>Not started</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Module 3 Content -->
                        <div id="module3-content" class="module-content">
                            <div class="module-intro">
                                <h3>Module 3: Modern Cryptography</h3>
                                <p>Explore contemporary encryption methods that secure our digital communications today.</p>
                            </div>
                            
                            <div class="lessons-grid">
                                <div class="lesson-box" onclick="showLesson('lesson3-1')">
                                    <div class="lesson-icon">
                                        <i class="fas fa-key"></i>
                                    </div>
                                    <div class="lesson-details">
                                        <h4>Symmetric Encryption</h4>
                                        <p>Using the same key for encryption and decryption</p>
                                        <div class="lesson-status">
                                            <i id="status-lesson3-1" class="fas fa-circle"></i> <span>Not started</span>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="lesson-box" onclick="showLesson('lesson3-2')">
                                    <div class="lesson-icon">
                                        <i class="fas fa-exchange-alt"></i>
                                    </div>
                                    <div class="lesson-details">
                                        <h4>Asymmetric Encryption</h4>
                                        <p>Public and private key cryptography</p>
                                        <div class="lesson-status">
                                            <i id="status-lesson3-2" class="fas fa-circle"></i> <span>Not started</span>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="lesson-box" onclick="showLesson('lesson3-3')">
                                    <div class="lesson-icon">
                                        <i class="fas fa-fingerprint"></i>
                                    </div>
                                    <div class="lesson-details">
                                        <h4>Hash Functions</h4>
                                        <p>One-way transformation of data</p>
                                        <div class="lesson-status">
                                            <i id="status-lesson3-3" class="fas fa-circle"></i> <span>Not started</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Module 4 Content -->
                        <div id="module4-content" class="module-content">
                            <div class="module-intro">
                                <h3>Module 4: Applications</h3>
                                <p>Learn how cryptography is applied in real-world systems and protocols.</p>
                            </div>
                            
                            <div class="lessons-grid">
                                <div class="lesson-box" onclick="showLesson('lesson4-1')">
                                    <div class="lesson-icon">
                                        <i class="fas fa-lock"></i>
                                    </div>
                                    <div class="lesson-details">
                                        <h4>Secure Communications</h4>
                                        <p>TLS, SSL, and secure messaging protocols</p>
                                        <div class="lesson-status">
                                            <i id="status-lesson4-1" class="fas fa-circle"></i> <span>Not started</span>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="lesson-box" onclick="showLesson('lesson4-2')">
                                    <div class="lesson-icon">
                                        <i class="fas fa-signature"></i>
                                    </div>
                                    <div class="lesson-details">
                                        <h4>Digital Signatures</h4>
                                        <p>Authentication and non-repudiation</p>
                                        <div class="lesson-status">
                                            <i id="status-lesson4-2" class="fas fa-circle"></i> <span>Not started</span>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="lesson-box" onclick="showLesson('lesson4-3')">
                                    <div class="lesson-icon">
                                        <i class="fas fa-shield-alt"></i>
                                    </div>
                                    <div class="lesson-details">
                                        <h4>Security Protocols</h4>
                                        <p>How systems implement cryptography</p>
                                        <div class="lesson-status">
                                            <i id="status-lesson4-3" class="fas fa-circle"></i> <span>Not started</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Module 5 Content -->
                        <div id="module5-content" class="module-content">
                            <div class="module-intro">
                                <h3>Module 5: Advanced Topics</h3>
                                <p>Dive into cutting-edge cryptographic concepts shaping the future of security.</p>
                            </div>
                            
                            <div class="lessons-grid">
                                <div class="lesson-box" onclick="showLesson('lesson5-1')">
                                    <div class="lesson-icon">
                                        <i class="fas fa-atom"></i>
                                    </div>
                                    <div class="lesson-details">
                                        <h4>Quantum Cryptography</h4>
                                        <p>Securing communications using quantum physics</p>
                                        <div class="lesson-status">
                                            <i id="status-lesson5-1" class="fas fa-circle"></i> <span>Not started</span>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="lesson-box" onclick="showLesson('lesson5-2')">
                                    <div class="lesson-icon">
                                        <i class="fas fa-eye-slash"></i>
                                    </div>
                                    <div class="lesson-details">
                                        <h4>Zero-Knowledge Proofs</h4>
                                        <p>Proving knowledge without revealing information</p>
                                        <div class="lesson-status">
                                            <i id="status-lesson5-2" class="fas fa-circle"></i> <span>Not started</span>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="lesson-box" onclick="showLesson('lesson5-3')">
                                    <div class="lesson-icon">
                                        <i class="fas fa-user-secret"></i>
                                    </div>
                                    <div class="lesson-details">
                                        <h4>Future of Cryptography</h4>
                                        <p>Emerging trends and research directions</p>
                                        <div class="lesson-status">
                                            <i id="status-lesson5-3" class="fas fa-circle"></i> <span>Not started</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Lesson Content Section -->
            <div id="lesson-content-section" class="mt-5" style="display: none;">
                <div class="lesson-header">
                    <div class="lesson-breadcrumbs">
                        <a id="back-to-modules" href="javascript:void(0)">
                            <i class="fas fa-home"></i> Modules
                        </a>
                        <span class="breadcrumb-separator"><i class="fas fa-angle-right"></i></span>
                        <span id="current-module-name">Module</span>
                        <span class="breadcrumb-separator"><i class="fas fa-angle-right"></i></span>
                        <span id="lesson-title">Lesson</span>
                    </div>
                    <div class="lesson-actions">
                        <div class="lesson-progress-indicator">
                            <span id="lesson-number">1</span> of <span id="lesson-total">3</span>
                        </div>
                        <button id="complete-lesson" class="simple-button">
                            <i class="fas fa-check-circle"></i> Mark as Complete
                        </button>
                    </div>
                </div>
                
                <div class="lesson-content-container mt-4">
                    <!-- Module content will be shown/hidden based on current lesson -->
                    {% include "learn/module1.njk" %}
                    {% include "learn/module2.njk" %}
                    {% include "learn/module3.njk" %}
                    {% include "learn/module4.njk" %}
                    {% include "learn/module5.njk" %}
                </div>
                
                <div class="lesson-navigation mt-4">
                    <button id="prev-lesson" class="nav-button">
                        <i class="fas fa-arrow-left"></i> Previous Lesson
                    </button>
                    <button id="next-lesson" class="nav-button">
                        Next Lesson <i class="fas fa-arrow-right"></i>
                    </button>
                </div>
            </div>

            <!-- Final Quiz Section -->
            <div id="final-quiz-section" class="mt-5" style="display: none;">
                <div class="section-header">
                    <div class="section-breadcrumbs">
                        <a id="back-to-modules-from-quiz" href="javascript:void(0)">
                            <i class="fas fa-home"></i> Back to Modules
                        </a>
                    </div>
                    <h2 class="section-title text-center">Final Cryptography Assessment</h2>
                </div>
                
                <div class="final-quiz-content mt-4">
                    {% include "learn/final-quiz.njk" %}
                </div>
            </div>
            
            <!-- Final Quiz Link -->
            <div class="final-quiz-link text-center mt-5">
                <h3>Ready to Test Your Knowledge?</h3>
                <p>Complete the final assessment to earn your cryptography certificate</p>
                <button id="show-final-quiz" class="cta-button">
                    <i class="fas fa-graduation-cap"></i> Take the Final Quiz
                </button>
            </div>
        </div>
    </div>
</section>

<style>
/* Enhanced Learn Page Styles */
/* Module Roadmap */
.module-roadmap {
    position: relative;
    width: 100%;
    padding: 30px 0;
    margin-bottom: 2rem;
}

.roadmap-track {
    position: relative;
    height: 120px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    max-width: 90%;
    margin: 0 auto;
}

.roadmap-progress {
    position: absolute;
    top: 60px;
    left: 0;
    height: 4px;
    background-color: var(--primary-dark);
    width: 0%;
    transition: width 0.6s ease;
    z-index: 1;
}

.roadmap-node {
    position: relative;
    z-index: 2;
    transition: all 0.3s ease;
    text-align: center;
    width: 80px;
    cursor: pointer;
}

.node-icon {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background-color: var(--darker);
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 0 auto 10px;
    border: 2px solid var(--primary-dark);
    color: var(--primary-dark);
    transition: all 0.3s ease;
}

.roadmap-node.active .node-icon, 
.roadmap-node.completed .node-icon {
    background-color: var(--primary);
    color: var(--dark);
    border-color: var(--primary);
    box-shadow: 0 0 15px var(--primary);
}

.roadmap-node.completed .node-icon {
    background-color: var(--primary-dark);
}

.node-label {
    font-size: 12px;
    color: var(--text-muted);
    transition: all 0.3s ease;
}

.roadmap-node.active .node-label, 
.roadmap-node.completed .node-label {
    color: var(--primary);
    font-weight: bold;
}

.roadmap-node:hover .node-icon {
    transform: scale(1.1);
}

/* Lesson Header Styles */
.lesson-header {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    padding-bottom: 1rem;
    margin-bottom: 1.5rem;
    border-bottom: 1px solid var(--primary-dark);
}

.lesson-breadcrumbs {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    font-size: 0.95rem;
}

.lesson-breadcrumbs a {
    color: var(--primary);
    text-decoration: none;
    transition: all 0.3s ease;
}

.lesson-breadcrumbs a:hover {
    color: var(--secondary);
}

.breadcrumb-separator {
    margin: 0 8px;
    color: var(--text-muted);
}

.lesson-actions {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.lesson-progress-indicator {
    background-color: var(--darker);
    padding: 0.4rem 0.8rem;
    border-radius: 20px;
    font-size: 0.85rem;
    color: var(--text-muted);
    border: 1px solid var(--primary-dark);
}

#learn-hero {
    min-height: 40vh;
    padding: 4rem 0;
    position: relative;
}

.hero-title {
    font-size: 3.5rem;
    margin-bottom: 1.5rem;
    position: relative;
}

.hero-badges {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-top: 2rem;
}

.module-badge {
    background-color: rgba(0, 255, 65, 0.1);
    border: 1px solid var(--primary);
    color: var(--primary);
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-weight: 500;
}

.learn-card {
    background-color: var(--medium-dark);
    border: 1px solid var(--primary-dark);
    border-radius: 8px;
    padding: 2rem;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

.guide-steps {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
    margin-top: 2rem;
}

.guide-step {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
}

.step-number {
    background-color: var(--primary);
    color: var(--dark);
    width: 30px;
    height: 30px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    flex-shrink: 0;
}

.step-content h4 {
    color: var(--primary);
    margin-bottom: 0.5rem;
}

.progress-container {
    background-color: var(--medium-dark);
    border: 1px solid var(--primary-dark);
    border-radius: 8px;
    padding: 1.5rem;
}

.progress-tracker {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
    margin-top: 1rem;
}

.progress-bar-container {
    flex-grow: 1;
}

.progress-label {
    display: flex;
    justify-content: space-between;
    margin-bottom: 0.5rem;
}

.progress {
    height: 10px;
    background-color: var(--darker);
    border-radius: 5px;
    overflow: hidden;
}

.progress-bar {
    background-color: var(--primary);
    border-radius: 5px;
    transition: width 0.3s ease;
}

.simple-tabs {
    margin-top: 2rem;
}

.tab-header {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1.5rem;
}

.tab-button {
    background-color: var(--medium-dark);
    border: 1px solid var(--primary-dark);
    color: var(--text);
    padding: 0.75rem 1.5rem;
    border-radius: 8px 8px 0 0;
    cursor: pointer;
    transition: all 0.3s ease;
}

.tab-button.active, .tab-button:hover {
    background-color: var(--primary);
    color: var(--dark);
    border-color: var(--primary);
}

.tab-button i {
    margin-right: 0.5rem;
}

.module-content {
    display: none;
    background-color: var(--medium-dark);
    border: 1px solid var(--primary-dark);
    border-radius: 8px;
    padding: 2rem;
}

.module-content.active {
    display: block;
    animation: fadeIn 0.3s ease;
}

.module-intro {
    margin-bottom: 2rem;
    text-align: center;
}

.module-intro h3 {
    color: var(--primary);
    margin-bottom: 0.5rem;
}

.lessons-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
}

.lesson-box {
    background-color: var(--darker);
    border: 1px solid var(--primary-dark);
    border-radius: 8px;
    padding: 1.5rem;
    display: flex;
    align-items: flex-start;
    gap: 1rem;
    cursor: pointer;
    transition: all 0.3s ease;
}

.lesson-box:hover {
    transform: translateY(-5px);
    border-color: var(--primary);
    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
}

.lesson-icon {
    background-color: rgba(0, 255, 65, 0.1);
    color: var(--primary);
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.2rem;
    flex-shrink: 0;
}

.lesson-details h4 {
    color: var(--primary);
    margin-bottom: 0.5rem;
}

.lesson-status {
    margin-top: 1rem;
    font-size: 0.9rem;
    color: var(--text-muted);
}

.lesson-status i {
    font-size: 0.8rem;
    margin-right: 0.5rem;
}

.lesson-status .fa-check-circle {
    color: var(--primary);
}

.simple-button {
    background-color: var(--darker);
    border: 1px solid var(--primary-dark);
    color: var(--text);
    padding: 0.5rem 1rem;
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.3s ease;
}

.simple-button:hover {
    background-color: var(--primary);
    color: var(--dark);
    border-color: var(--primary);
}

.simple-button.completed {
    background-color: var(--primary);
    color: var(--dark);
}

.lesson-navigation {
    display: flex;
    justify-content: space-between;
    margin-top: 2rem;
    padding-top: 1rem;
    border-top: 1px solid var(--primary-dark);
}

.nav-button {
    background-color: var(--darker);
    border: 1px solid var(--primary-dark);
    color: var(--text);
    padding: 0.75rem 1.5rem;
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.3s ease;
}

.nav-button:hover {
    background-color: var(--primary);
    color: var(--dark);
}

.final-quiz-link {
    margin-top: 3rem;
    padding: 2rem;
    background-color: var(--medium-dark);
    border: 1px solid var(--primary-dark);
    border-radius: 8px;
}

/* Section styles for final quiz */
.section-header {
    display: flex;
    flex-direction: column;
    margin-bottom: 1.5rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--primary-dark);
}

.section-breadcrumbs {
    margin-bottom: 1rem;
}

.section-breadcrumbs a {
    color: var(--primary);
    text-decoration: none;
    transition: all 0.3s ease;
    font-size: 0.95rem;
}

.section-breadcrumbs a:hover {
    color: var(--secondary);
}

.pulse-animation {
    animation: pulse 1s;
}

@keyframes pulse {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.1);
    }
    100% {
        transform: scale(1);
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

/* Quiz styling */
.quiz-container {
    background-color: var(--darker);
    border: 1px solid var(--primary-dark);
    border-radius: 8px;
    padding: 1.5rem;
    margin-top: 2rem;
}

.quiz-question {
    font-weight: bold;
    margin-bottom: 1rem;
}

.option-item {
    display: block;
    padding: 0.75rem 1rem;
    margin-bottom: 0.5rem;
    background-color: var(--medium-dark);
    border: 1px solid var(--primary-dark);
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.2s ease;
}

.option-item:hover {
    background-color: var(--light-dark);
}

.option-item input[type="radio"] {
    margin-right: 0.5rem;
}

.correct-option {
    background-color: rgba(0, 255, 65, 0.2) !important;
    border-color: var(--primary) !important;
}

.incorrect-option {
    background-color: rgba(255, 0, 0, 0.2) !important;
    border-color: #ff0000 !important;
}

.feedback-container {
    margin-top: 1rem;
    padding: 1rem;
    border-radius: 4px;
}

.correct-answer {
    color: var(--primary);
}

.incorrect-answer {
    color: #ff5555;
}

.correct-answer i, .incorrect-answer i {
    margin-right: 0.5rem;
}

/* Responsive Adjustments */
@media (max-width: 768px) {
    .hero-title {
        font-size: 2.5rem;
    }
    
    .tab-header {
        flex-direction: column;
    }
    
    .tab-button {
        width: 100%;
        border-radius: 4px;
    }
    
    .lesson-header {
        flex-direction: column;
        gap: 1rem;
        text-align: center;
    }
    
    .guide-steps {
        grid-template-columns: 1fr;
    }
    
    .roadmap-track {
        height: auto;
        flex-direction: column;
        gap: 2rem;
    }
    
    .roadmap-progress {
        display: none;
    }
}
</style>

<script>
// Improved Learn Page JavaScript
document.addEventListener('DOMContentLoaded', function() {
    // Use sessionStorage for progress tracking to avoid caching issues
    const PROGRESS_KEY = 'cipherLabQuizProgress';
    
    // Common selectors
    const modulesContainer = document.querySelector('.modules-container');
    const lessonContentSection = document.getElementById('lesson-content-section');
    const finalQuizSection = document.getElementById('final-quiz-section');
    const finalQuizLink = document.querySelector('.final-quiz-link');
    
    // Tab functionality
    const tabButtons = document.querySelectorAll('.tab-button');
    const tabContents = document.querySelectorAll('.module-content');
    const roadmapNodes = document.querySelectorAll('.roadmap-node');
    const roadmapProgress = document.querySelector('.roadmap-progress');
    
    // Module data structure to organize lessons
    const moduleData = {
        module1: ['lesson1-1', 'lesson1-2', 'lesson1-3'],
        module2: ['lesson2-1', 'lesson2-2', 'lesson2-3'],
        module3: ['lesson3-1', 'lesson3-2', 'lesson3-3'],
        module4: ['lesson4-1', 'lesson4-2', 'lesson4-3'],
        module5: ['lesson5-1', 'lesson5-2', 'lesson5-3']
    };
    
    // Module names for display
    const moduleNames = {
        module1: "Fundamentals",
        module2: "Classical Ciphers",
        module3: "Modern Cryptography",
        module4: "Applications",
        module5: "Advanced Topics"
    };
    
    // Current lesson tracking
    let currentLesson = null;
    
    // Tab switching functionality with roadmap update
    function activateModule(moduleId) {
        // Remove active class from all tabs, contents, and roadmap nodes
        tabButtons.forEach(btn => btn.classList.remove('active'));
        tabContents.forEach(content => content.classList.remove('active'));
        roadmapNodes.forEach(node => node.classList.remove('active'));
        
        // Add active class to selected tab and content
        document.querySelector(`.tab-button[data-module="${moduleId}"]`).classList.add('active');
        document.getElementById(`${moduleId}-content`).classList.add('active');
        
        // Update roadmap
        document.querySelector(`.roadmap-node[data-module="${moduleId}"]`).classList.add('active');
        
        // Update roadmap progress based on active module
        const moduleIndex = parseInt(moduleId.replace('module', '')) - 1;
        const progressPercentage = (moduleIndex / (roadmapNodes.length - 1)) * 100;
        roadmapProgress.style.width = progressPercentage + '%';
    }
    
    // Tab click handlers
    tabButtons.forEach(button => {
        button.addEventListener('click', function() {
            const moduleId = this.getAttribute('data-module');
            activateModule(moduleId);
        });
    });
    
    // Roadmap node click handlers
    roadmapNodes.forEach(node => {
        node.addEventListener('click', function() {
            const moduleId = this.getAttribute('data-module');
            activateModule(moduleId);
        });
    });
    
    // Handle showing a specific lesson
    function showLesson(lessonId) {
        // Hide modules section and final quiz, show lesson content
        modulesContainer.style.display = 'none';
        lessonContentSection.style.display = 'block';
        finalQuizSection.style.display = 'none';
        finalQuizLink.style.display = 'none';
        
        // Store current lesson
        currentLesson = lessonId;
        
        // Extract module number and ID
        const moduleNum = lessonId.charAt(6);
        const moduleId = `module${moduleNum}`;
        
        // Hide all lesson content
        document.querySelectorAll('.lesson-container').forEach(container => {
            container.style.display = 'none';
        });
        
        // Show only the current lesson
        const currentLessonElement = document.getElementById(`${lessonId}-content`);
        if (currentLessonElement) {
            currentLessonElement.style.display = 'block';
        }
        
        // Update lesson navigation
        const lessons = moduleData[moduleId];
        const currentIndex = lessons.indexOf(lessonId);
        
        // Update lesson number display
        document.getElementById('lesson-number').textContent = currentIndex + 1;
        document.getElementById('lesson-total').textContent = lessons.length;
        
        // Update module name in breadcrumb
        document.getElementById('current-module-name').textContent = moduleNames[moduleId];
        
        // Set lesson title
        const lessonBox = document.querySelector(`.lesson-box[onclick*="${lessonId}"]`);
        if (lessonBox) {
            document.getElementById('lesson-title').textContent = lessonBox.querySelector('h4').textContent;
        }
        
        // Update complete button status
        updateCompleteButtonStatus(lessonId);
        
        // Update navigation buttons
        updateNavigationButtons(lessonId, moduleId);
        
        // Scroll to top
        window.scrollTo({ top: 0, behavior: 'smooth' });
    }
    
    // Update navigation buttons based on current lesson
    function updateNavigationButtons(lessonId, moduleId) {
        const prevButton = document.getElementById('prev-lesson');
        const nextButton = document.getElementById('next-lesson');
        
        const lessons = moduleData[moduleId];
        const currentIndex = lessons.indexOf(lessonId);
        
        // Previous button
        if (currentIndex > 0) {
            prevButton.style.display = 'block';
            prevButton.onclick = function() {
                showLesson(lessons[currentIndex - 1]);
            };
        } else {
            prevButton.style.display = 'none';
        }
        
        // Next button
        if (currentIndex < lessons.length - 1) {
            nextButton.style.display = 'block';
            nextButton.onclick = function() {
                showLesson(lessons[currentIndex + 1]);
            };
        } else {
            nextButton.style.display = 'none';
        }
    }
    
    // Back to modules button
    document.getElementById('back-to-modules').addEventListener('click', function() {
        // Hide lesson content and final quiz
        lessonContentSection.style.display = 'none';
        finalQuizSection.style.display = 'none';
        
        // Show modules and quiz link
        modulesContainer.style.display = 'block';
        finalQuizLink.style.display = 'block';
        
        // Scroll to top
        window.scrollTo({ top: 0, behavior: 'smooth' });
    });
    
    // Show final quiz button
    document.getElementById('show-final-quiz').addEventListener('click', function() {
        // Hide modules and lesson content
        modulesContainer.style.display = 'none';
        lessonContentSection.style.display = 'none';
        finalQuizLink.style.display = 'none';
        
        // Show final quiz section
        finalQuizSection.style.display = 'block';
        
        // Scroll to top
        window.scrollTo({ top: 0, behavior: 'smooth' });
    });
    
    // Back to modules from quiz
    document.getElementById('back-to-modules-from-quiz').addEventListener('click', function() {
        // Hide final quiz
        finalQuizSection.style.display = 'none';
        
        // Show modules and quiz link
        modulesContainer.style.display = 'block';
        finalQuizLink.style.display = 'block';
        
        // Scroll to top
        window.scrollTo({ top: 0, behavior: 'smooth' });
    });
    
    // Progress tracking functions
    function loadProgress() {
        const progressData = sessionStorage.getItem(PROGRESS_KEY);
        
        if (progressData) {
            return JSON.parse(progressData);
        } else {
            // Initialize empty progress
            return { completedLessons: [] };
        }
    }
    
    function saveProgress(progress) {
        sessionStorage.setItem(PROGRESS_KEY, JSON.stringify(progress));
        updateProgressDisplay();
    }
    
    function isLessonCompleted(lessonId) {
        const progress = loadProgress();
        return progress.completedLessons && progress.completedLessons.includes(lessonId);
    }
    
    // Complete lesson button
    document.getElementById('complete-lesson').addEventListener('click', function() {
        if (!currentLesson) return;
        
        const progress = loadProgress();
        
        // If lesson not already completed, mark it complete
        if (!isLessonCompleted(currentLesson)) {
            progress.completedLessons.push(currentLesson);
            saveProgress(progress);
            
            // Update button appearance
            this.classList.add('completed');
            this.innerHTML = '<i class="fas fa-check-circle"></i> Completed';
            
            // Update status icon
            const statusIcon = document.getElementById(`status-${currentLesson}`);
            const statusText = statusIcon ? statusIcon.nextElementSibling : null;
            
            if (statusIcon) {
                statusIcon.className = 'fas fa-check-circle';
            }
            
            if (statusText) {
                statusText.textContent = 'Completed';
            }
            
            // Add animation
            this.classList.add('pulse-animation');
            setTimeout(() => {
                this.classList.remove('pulse-animation');
            }, 1000);
        }
    });
    
    // Update complete button status
    function updateCompleteButtonStatus(lessonId) {
        const completeButton = document.getElementById('complete-lesson');
        
        if (isLessonCompleted(lessonId)) {
            completeButton.classList.add('completed');
            completeButton.innerHTML = '<i class="fas fa-check-circle"></i> Completed';
        } else {
            completeButton.classList.remove('completed');
            completeButton.innerHTML = '<i class="fas fa-check-circle"></i> Mark as Complete';
        }
    }
    
    // Update all progress indicators
    function updateProgressDisplay() {
        const progress = loadProgress();
        const totalLessons = Object.values(moduleData).flat().length;
        const completedCount = progress.completedLessons ? progress.completedLessons.length : 0;
        const percentComplete = Math.round((completedCount / totalLessons) * 100);
        
        // Update progress bar and text
        document.getElementById('progress-percentage').textContent = percentComplete + '%';
        document.getElementById('quiz-progress-value').style.width = percentComplete + '%';
        document.getElementById('quiz-progress-value').setAttribute('aria-valuenow', percentComplete);
        
        // Update all lesson status icons
        Object.values(moduleData).flat().forEach(lessonId => {
            const statusIcon = document.getElementById(`status-${lessonId}`);
            const statusText = statusIcon ? statusIcon.nextElementSibling : null;
            
            if (statusIcon && statusText) {
                if (isLessonCompleted(lessonId)) {
                    statusIcon.className = 'fas fa-check-circle';
                    statusText.textContent = 'Completed';
                } else {
                    statusIcon.className = 'fas fa-circle';
                    statusText.textContent = 'Not started';
                }
            }
        });
        
        // Update module completion status in roadmap
        roadmapNodes.forEach((node, index) => {
            const moduleId = node.getAttribute('data-module');
            const moduleLessons = moduleData[moduleId];
            
            // Mark module as completed if all its lessons are completed
            if (moduleLessons.every(lessonId => isLessonCompleted(lessonId))) {
                node.classList.add('completed');
            } else {
                node.classList.remove('completed');
            }
        });
    }
    
    // Reset progress button handler
    document.getElementById('reset-progress').addEventListener('click', function() {
        if (confirm('Are you sure you want to reset your progress? This cannot be undone.')) {
            // Clear progress data
            sessionStorage.removeItem(PROGRESS_KEY);
            
            // Reset UI
            updateProgressDisplay();
            
            // Provide feedback
            this.textContent = 'Progress Reset!';
            setTimeout(() => {
                this.textContent = 'Reset Progress';
            }, 2000);
        }
    });
    
    // Initialize progress display
    updateProgressDisplay();
    
    // Set up initial tab
    activateModule('module1');
    
    // Set up global function for checking quiz answers
    window.checkAnswer = function(button, lessonId) {
        const correctAnswer = button.getAttribute('data-correct');
        const questionContainer = button.closest('.quiz-container');
        const selectedOption = questionContainer.querySelector('input[type="radio"]:checked');
        
        if (!selectedOption) {
            alert('Please select an answer first!');
            return;
        }
        
        const feedbackContainer = questionContainer.querySelector('.feedback-container');
        
        // Show feedback container
        feedbackContainer.style.display = 'block';
        
        // Check if answer is correct
        if (selectedOption.value === correctAnswer) {
            // Show correct feedback, hide incorrect
            questionContainer.querySelector('.correct-answer').style.display = 'block';
            questionContainer.querySelector('.incorrect-answer').style.display = 'none';
            
            // Highlight selected option
            selectedOption.closest('.simple-option').classList.add('correct-option');
        } else {
            // Show incorrect feedback, hide correct
            questionContainer.querySelector('.correct-answer').style.display = 'none';
            questionContainer.querySelector('.incorrect-answer').style.display = 'block';
            
            // Highlight selected option as incorrect
            selectedOption.closest('.simple-option').classList.add('incorrect-option');
            
            // Highlight correct option
            const correctOption = questionContainer.querySelector(`input[value="${correctAnswer}"]`);
            if (correctOption) {
                correctOption.closest('.simple-option').classList.add('correct-option');
            }
        }
        
        // Disable all options
        questionContainer.querySelectorAll('input[type="radio"]').forEach(input => {
            input.disabled = true;
        });
        
        // Update button
        button.textContent = 'Answered';
        button.disabled = true;
    };
});
</script>