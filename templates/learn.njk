---
layout: layout.njk
title: Learn Cryptography - CipherLab
---
<div class="hero" id="learn-hero">
    <div class="hero-gradient-container"></div>
    <div class="row hero-row">
        <div class="col-12 text-center">
            <h1>Learn Cryptography</h1>
            <p class="mb-4 hero-subtitle">Learn the basics of cryptography through simple lessons</p>
        </div>
    </div>
</div>

<section class="container section">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <!-- Simple Start Guide -->
            <div class="start-guide">
                <div class="guide-step">
                    <div class="step-number">1</div>
                    <div class="step-text">Choose a module below</div>
                </div>
                <div class="guide-step">
                    <div class="step-number">2</div>
                    <div class="step-text">Click on any lesson to start learning</div>
                </div>
                <div class="guide-step">
                    <div class="step-number">3</div>
                    <div class="step-text">Take the quiz when you're ready!</div>
                </div>
            </div>
            
            <!-- Module Navigation -->
            <div class="module-selection">
                <h2>Select a Topic</h2>
                <div class="simple-tabs">
                    <button class="simple-tab active" data-module="module1">Fundamentals</button>
                    <button class="simple-tab" data-module="module2">Classical Ciphers</button>
                    <button class="simple-tab" data-module="module3">Modern Cryptography</button>
                    <button class="simple-tab" data-module="module4">Applications</button>
                    <button class="simple-tab" data-module="module5">Advanced Topics</button>
                </div>
                
                <!-- Module Content -->
                <div class="module-display">
                    <!-- Module 1 Content -->
                    <div class="module-content active" id="module1-content">
                        <h3>Fundamentals of Cryptography</h3>
                        <p class="module-description">Learn the basic concepts and terminology of cryptography</p>
                        
                        <div class="simple-lessons">
                            <div class="lesson-box" onclick="showLesson('lesson1-1')">
                                <h4>What is Cryptography?</h4>
                                <p>An introduction to the science of secret codes</p>
                                <div class="lesson-status">
                                    <i class="far fa-circle" id="status-lesson1-1"></i>
                                    <span>Click to start</span>
                                </div>
                            </div>
                            
                            <div class="lesson-box" onclick="showLesson('lesson1-2')">
                                <h4>Types of Cryptography</h4>
                                <p>Learn about different encryption methods</p>
                                <div class="lesson-status">
                                    <i class="far fa-circle" id="status-lesson1-2"></i>
                                    <span>Click to start</span>
                                </div>
                            </div>
                            
                            <div class="lesson-box" onclick="showLesson('lesson1-3')">
                                <h4>Cryptography in the Real World</h4>
                                <p>How encryption is used in everyday life</p>
                                <div class="lesson-status">
                                    <i class="far fa-circle" id="status-lesson1-3"></i>
                                    <span>Click to start</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Module 2 Content -->
                    <div class="module-content" id="module2-content">
                        <h3>Classical Ciphers</h3>
                        <p class="module-description">Explore historical encryption techniques and their implementations</p>
                        
                        <div class="simple-lessons">
                            <div class="lesson-box" onclick="showLesson('lesson2-1')">
                                <h4>Caesar Cipher</h4>
                                <p>The famous encryption method used by Julius Caesar</p>
                                <div class="lesson-status">
                                    <i class="far fa-circle" id="status-lesson2-1"></i>
                                    <span>Click to start</span>
                                </div>
                            </div>
                            
                            <div class="lesson-box" onclick="showLesson('lesson2-2')">
                                <h4>Vigen√®re Cipher</h4>
                                <p>A method to encrypt using a keyword</p>
                                <div class="lesson-status">
                                    <i class="far fa-circle" id="status-lesson2-2"></i>
                                    <span>Click to start</span>
                                </div>
                            </div>
                            
                            <div class="lesson-box" onclick="showLesson('lesson2-3')">
                                <h4>Substitution Cipher</h4>
                                <p>Replacing each letter with another symbol</p>
                                <div class="lesson-status">
                                    <i class="far fa-circle" id="status-lesson2-3"></i>
                                    <span>Click to start</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Module 3 Content -->
                    <div class="module-content" id="module3-content">
                        <h3>Modern Cryptography</h3>
                        <p class="module-description">Understand contemporary encryption algorithms and techniques</p>
                        
                        <div class="simple-lessons">
                            <div class="lesson-box" onclick="showLesson('lesson3-1')">
                                <h4>Symmetric Encryption</h4>
                                <p>Using the same key to encrypt and decrypt</p>
                                <div class="lesson-status">
                                    <i class="far fa-circle" id="status-lesson3-1"></i>
                                    <span>Click to start</span>
                                </div>
                            </div>
                            
                            <div class="lesson-box" onclick="showLesson('lesson3-2')">
                                <h4>Asymmetric Encryption</h4>
                                <p>Using public and private keys for security</p>
                                <div class="lesson-status">
                                    <i class="far fa-circle" id="status-lesson3-2"></i>
                                    <span>Click to start</span>
                                </div>
                            </div>
                            
                            <div class="lesson-box" onclick="showLesson('lesson3-3')">
                                <h4>Hash Functions</h4>
                                <p>One-way functions that protect data</p>
                                <div class="lesson-status">
                                    <i class="far fa-circle" id="status-lesson3-3"></i>
                                    <span>Click to start</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Module 4 Content -->
                    <div class="module-content" id="module4-content">
                        <h3>Practical Applications</h3>
                        <p class="module-description">Learn how cryptography is used in everyday technology</p>
                        
                        <div class="simple-lessons">
                            <div class="lesson-box" onclick="showLesson('lesson4-1')">
                                <h4>Secure Communications</h4>
                                <p>How your messages stay private online</p>
                                <div class="lesson-status">
                                    <i class="far fa-circle" id="status-lesson4-1"></i>
                                    <span>Click to start</span>
                                </div>
                            </div>
                            
                            <div class="lesson-box" onclick="showLesson('lesson4-2')">
                                <h4>Digital Signatures</h4>
                                <p>Verifying who sent a message</p>
                                <div class="lesson-status">
                                    <i class="far fa-circle" id="status-lesson4-2"></i>
                                    <span>Click to start</span>
                                </div>
                            </div>
                            
                            <div class="lesson-box" onclick="showLesson('lesson4-3')">
                                <h4>Blockchain Technology</h4>
                                <p>The security behind cryptocurrencies</p>
                                <div class="lesson-status">
                                    <i class="far fa-circle" id="status-lesson4-3"></i>
                                    <span>Click to start</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Module 5 Content -->
                    <div class="module-content" id="module5-content">
                        <h3>Advanced Topics</h3>
                        <p class="module-description">Discover cutting-edge cryptographic concepts and future directions</p>
                        
                        <div class="simple-lessons">
                            <div class="lesson-box" onclick="showLesson('lesson5-1')">
                                <h4>Quantum Cryptography</h4>
                                <p>The future of ultra-secure encryption</p>
                                <div class="lesson-status">
                                    <i class="far fa-circle" id="status-lesson5-1"></i>
                                    <span>Click to start</span>
                                </div>
                            </div>
                            
                            <div class="lesson-box" onclick="showLesson('lesson5-2')">
                                <h4>Zero-Knowledge Proofs</h4>
                                <p>Proving you know something without revealing it</p>
                                <div class="lesson-status">
                                    <i class="far fa-circle" id="status-lesson5-2"></i>
                                    <span>Click to start</span>
                                </div>
                            </div>
                            
                            <div class="lesson-box" onclick="showLesson('lesson5-3')">
                                <h4>Homomorphic Encryption</h4>
                                <p>Working with encrypted data without decrypting it</p>
                                <div class="lesson-status">
                                    <i class="far fa-circle" id="status-lesson5-3"></i>
                                    <span>Click to start</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Final Quiz Button -->
            <div class="quiz-button-container">
                <h3>Ready to Test Your Knowledge?</h3>
                <p>Take our quiz to see what you've learned about cryptography</p>
                <button id="start-final-quiz" class="final-quiz-button" onclick="startFinalQuiz()">
                    <i class="fas fa-check-circle"></i> Take the Quiz
                </button>
            </div>
        </div>
    </div>
</section>

<section class="container section" id="lesson-content-section" style="display: none;">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="lesson-card fade-in">
                <div class="lesson-header">
                    <button id="back-to-modules" class="back-button"><i class="fas fa-arrow-left"></i> Back to All Lessons</button>
                    <h2 id="lesson-title" class="mb-0"></h2>
                </div>
                <div class="lesson-body">
                    <div id="lesson-content">
                        <!-- Lesson content will be loaded here -->
                    </div>
                    
                    <div class="lesson-navigation">
                        <button id="prev-lesson" class="nav-button"><i class="fas fa-chevron-left"></i> Previous Lesson</button>
                        <button id="complete-lesson" class="complete-button">
                            <i class="fas fa-check-circle"></i> Mark as Complete
                        </button>
                        <button id="next-lesson" class="nav-button">Next Lesson <i class="fas fa-chevron-right"></i></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Lesson Content Templates -->
<div id="lesson-templates" style="display: none;">
    <!-- Include the lesson content templates -->
    {% include "learn/lesson-templates.njk" %}
</div>

<!-- CSS Styles -->
<style>
    /* Hero Section */
    #learn-hero {
        background-color: var(--darker);
        padding: 3rem 0;
        margin-bottom: 2rem;
        border-bottom: 1px solid var(--primary-dark);
    }
    
    #learn-hero h1 {
        color: var(--primary);
        margin-bottom: 1rem;
        font-size: 2.5rem;
    }
    
    .hero-subtitle {
        font-size: 1.2rem;
        color: var(--text);
    }
    
    /* Start Guide */
    .start-guide {
        background-color: var(--medium-dark);
        border-radius: 10px;
        padding: 1.5rem;
        margin-bottom: 2rem;
        border: 1px solid var(--primary-dark);
        display: flex;
        justify-content: center;
        flex-wrap: wrap;
        gap: 1.5rem;
    }
    
    .guide-step {
        display: flex;
        align-items: center;
        gap: 1rem;
    }
    
    .step-number {
        background-color: var(--primary);
        color: var(--dark);
        width: 36px;
        height: 36px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 1.2rem;
    }
    
    .step-text {
        font-size: 1.1rem;
        color: var(--text);
    }
    
    /* Module Selection */
    .module-selection {
        background-color: var(--medium-dark);
        border-radius: 10px;
        padding: 1.5rem;
        margin-bottom: 2rem;
        border: 1px solid var(--primary-dark);
    }
    
    .module-selection h2 {
        margin-bottom: 1.5rem;
        text-align: center;
        color: var(--primary);
        font-size: 1.8rem;
    }
    
    /* Simple Tabs */
    .simple-tabs {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-bottom: 2rem;
        justify-content: center;
    }
    
    .simple-tab {
        background-color: var(--darker);
        color: var(--text);
        border: 1px solid var(--primary-dark);
        padding: 0.75rem 1.25rem;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
        font-size: 1rem;
        min-width: 150px;
        text-align: center;
    }
    
    .simple-tab:hover {
        background-color: var(--primary-dark);
        color: var(--dark);
    }
    
    .simple-tab.active {
        background-color: var(--primary);
        color: var(--dark);
        font-weight: 600;
    }
    
    /* Module Content */
    .module-content {
        display: none;
    }
    
    .module-content.active {
        display: block;
    }
    
    .module-content h3 {
        color: var(--primary);
        margin-bottom: 0.5rem;
        text-align: center;
        font-size: 1.5rem;
    }
    
    .module-description {
        text-align: center;
        margin-bottom: 2rem;
        color: var(--text-muted);
    }
    
    /* Simple Lessons */
    .simple-lessons {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }
    
    .lesson-box {
        background-color: var(--darker);
        border-radius: 8px;
        padding: 1.25rem;
        cursor: pointer;
        transition: all 0.3s ease;
        border: 1px solid var(--primary-dark);
    }
    
    .lesson-box:hover {
        transform: translateY(-3px);
        border-color: var(--primary);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }
    
    .lesson-box h4 {
        color: var(--primary);
        margin: 0 0 0.5rem 0;
        font-size: 1.2rem;
    }
    
    .lesson-box p {
        color: var(--text);
        margin: 0 0 1rem 0;
        font-size: 0.95rem;
    }
    
    .lesson-status {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }
    
    .lesson-status i {
        color: var(--text-muted);
        font-size: 1rem;
    }
    
    .lesson-status i.fa-check-circle {
        color: var(--primary);
    }
    
    .lesson-status span {
        font-size: 0.9rem;
        color: var(--text-muted);
    }
    
    /* Quiz Button Container */
    .quiz-button-container {
        background-color: var(--medium-dark);
        border-radius: 10px;
        padding: 2rem;
        text-align: center;
        border: 1px solid var(--primary-dark);
        margin-top: 2rem;
    }
    
    .quiz-button-container h3 {
        color: var(--primary);
        margin-bottom: 0.75rem;
    }
    
    .quiz-button-container p {
        margin-bottom: 1.5rem;
        color: var(--text);
    }
    
    .final-quiz-button {
        background-color: var(--primary);
        color: var(--dark);
        border: none;
        padding: 0.75rem 1.75rem;
        border-radius: 8px;
        font-size: 1.1rem;
        font-weight: 600;
        display: inline-flex;
        align-items: center;
        gap: 0.75rem;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .final-quiz-button:hover {
        transform: scale(1.05);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }
    
    /* Lesson View */
    .lesson-card {
        background-color: var(--medium-dark);
        border-radius: 10px;
        border: 1px solid var(--primary-dark);
        overflow: hidden;
    }
    
    .lesson-header {
        background-color: var(--darker);
        padding: 1.25rem;
        border-bottom: 1px solid var(--primary-dark);
        display: flex;
        align-items: center;
        gap: 1rem;
    }
    
    .back-button {
        background-color: var(--medium-dark);
        color: var(--text);
        border: 1px solid var(--primary-dark);
        padding: 0.5rem 1rem;
        border-radius: 6px;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
    }
    
    .back-button:hover {
        background-color: var(--primary-dark);
        color: var(--dark);
    }
    
    .lesson-body {
        padding: 2rem;
    }
    
    .lesson-navigation {
        display: flex;
        justify-content: space-between;
        margin-top: 2rem;
        padding-top: 1.5rem;
        border-top: 1px solid var(--primary-dark);
        gap: 1rem;
    }
    
    .nav-button {
        background-color: var(--darker);
        color: var(--text);
        border: 1px solid var(--primary-dark);
        padding: 0.75rem 1.25rem;
        border-radius: 6px;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
    }
    
    .nav-button:hover:not(:disabled) {
        background-color: var(--primary-dark);
        color: var(--dark);
    }
    
    .nav-button:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }
    
    .complete-button {
        background-color: var(--primary);
        color: var(--dark);
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 6px;
        cursor: pointer;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        transition: all 0.3s ease;
    }
    
    .complete-button:hover:not(:disabled) {
        transform: scale(1.05);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }
    
    .complete-button:disabled {
        background-color: var(--text-muted);
        cursor: not-allowed;
    }
    
    /* Lesson Content Styling */
    #lesson-content {
        font-size: 1.05rem;
        line-height: 1.6;
    }
    
    #lesson-content h3 {
        color: var(--primary);
        margin-top: 1.5rem;
        margin-bottom: 1rem;
    }
    
    #lesson-content p {
        margin-bottom: 1.25rem;
    }
    
    .key-concept {
        background-color: rgba(0, 255, 65, 0.1);
        border-left: 4px solid var(--primary);
        padding: 1.25rem;
        margin: 1.5rem 0;
        border-radius: 6px;
    }
    
    /* Media Queries */
    @media (max-width: 768px) {
        .simple-tabs {
            flex-direction: column;
            gap: 0.75rem;
        }
        
        .simple-tab {
            width: 100%;
        }
        
        .lesson-navigation {
            flex-direction: column;
        }
        
        .guide-step {
            width: 100%;
            justify-content: flex-start;
        }
        
        .back-button {
            margin-bottom: 1rem;
        }
        
        .lesson-header {
            flex-direction: column;
            align-items: flex-start;
        }
    }
</style>

<!-- JavaScript for Interactive Functionality -->
<script>
    // Store quiz data in localStorage to maintain state between pages
    function saveQuizProgress() {
        const progress = {
            completedLessons: completedLessons,
            totalLessons: totalLessons
        };
        localStorage.setItem('cipherLabQuizProgress', JSON.stringify(progress));
    }
    
    // Load quiz progress from localStorage
    function loadQuizProgress() {
        const progressData = localStorage.getItem('cipherLabQuizProgress');
        if (progressData) {
            const progress = JSON.parse(progressData);
            return progress.completedLessons || [];
        }
        return [];
    }
    
    // Initialize the final quiz
    function startFinalQuiz() {
        // Save current progress
        saveQuizProgress();
        // Redirect to the quiz page
        window.location.href = '/quiz';
    }
    
    document.addEventListener('DOMContentLoaded', function() {
        // Get elements
        const simpleTabs = document.querySelectorAll('.simple-tab');
        const moduleContents = document.querySelectorAll('.module-content');
        const lessonContentSection = document.getElementById('lesson-content-section');
        const lessonTitle = document.getElementById('lesson-title');
        const lessonContent = document.getElementById('lesson-content');
        const prevLessonBtn = document.getElementById('prev-lesson');
        const nextLessonBtn = document.getElementById('next-lesson');
        const completeBtn = document.getElementById('complete-lesson');
        const backToModulesBtn = document.getElementById('back-to-modules');
        
        // Lesson templates
        const lessonTemplates = document.getElementById('lesson-templates');
        
        // Store completed lessons - load from localStorage if available
        let completedLessons = loadQuizProgress();
        let currentLesson = null;
        
        // Module and lesson data
        const modules = [
            {
                id: 'module1',
                title: 'Fundamentals of Cryptography',
                lessons: [
                    { id: 'lesson1-1', title: 'What is Cryptography?' },
                    { id: 'lesson1-2', title: 'Types of Cryptography' },
                    { id: 'lesson1-3', title: 'The Use of Cryptography in the Real World' }
                ]
            },
            {
                id: 'module2',
                title: 'Classical Ciphers',
                lessons: [
                    { id: 'lesson2-1', title: 'Caesar Cipher' },
                    { id: 'lesson2-2', title: 'Vigen√®re Cipher' },
                    { id: 'lesson2-3', title: 'Substitution Cipher' }
                ]
            },
            {
                id: 'module3',
                title: 'Modern Cryptography',
                lessons: [
                    { id: 'lesson3-1', title: 'Symmetric Encryption' },
                    { id: 'lesson3-2', title: 'Asymmetric Encryption' },
                    { id: 'lesson3-3', title: 'Hash Functions' }
                ]
            },
            {
                id: 'module4',
                title: 'Practical Applications',
                lessons: [
                    { id: 'lesson4-1', title: 'Secure Communications' },
                    { id: 'lesson4-2', title: 'Digital Signatures & PKI' },
                    { id: 'lesson4-3', title: 'Blockchain & Cryptocurrencies' }
                ]
            },
            {
                id: 'module5',
                title: 'Advanced Topics',
                lessons: [
                    { id: 'lesson5-1', title: 'Quantum Cryptography' },
                    { id: 'lesson5-2', title: 'Zero-Knowledge Proofs' },
                    { id: 'lesson5-3', title: 'Homomorphic Encryption' }
                ]
            }
        ];
        
        // Total number of lessons
        const totalLessons = modules.reduce((sum, module) => sum + module.lessons.length, 0);
        
        // Handle tab switching
        simpleTabs.forEach(tab => {
            tab.addEventListener('click', function() {
                const moduleId = this.getAttribute('data-module');
                
                // Remove active class from all tabs and content
                simpleTabs.forEach(t => t.classList.remove('active'));
                moduleContents.forEach(c => c.classList.remove('active'));
                
                // Add active class to selected tab and content
                this.classList.add('active');
                document.getElementById(`${moduleId}-content`).classList.add('active');
            });
        });
        
        // Go back to module selection
        backToModulesBtn.addEventListener('click', function() {
            lessonContentSection.style.display = 'none';
            window.scrollTo({ top: 0, behavior: 'smooth' });
        });
        
        // Show lesson content
        window.showLesson = function(lessonId) {
            // Find the lesson
            let lesson = null;
            let moduleId = '';
            let moduleIndex = 0;
            let lessonIndex = 0;
            
            for (let i = 0; i < modules.length; i++) {
                const module = modules[i];
                for (let j = 0; j < module.lessons.length; j++) {
                    if (module.lessons[j].id === lessonId) {
                        lesson = module.lessons[j];
                        moduleId = module.id;
                        moduleIndex = i;
                        lessonIndex = j;
                        break;
                    }
                }
                if (lesson) break;
            }
            
            if (!lesson) return;
            
            // Update current lesson
            currentLesson = {
                id: lessonId,
                moduleId: moduleId,
                moduleIndex: moduleIndex,
                lessonIndex: lessonIndex
            };
            
            // Set lesson title
            lessonTitle.textContent = lesson.title;
            
            // Get lesson content from template
            const template = document.getElementById(`${lessonId}-content`);
            if (template) {
                lessonContent.innerHTML = template.innerHTML;
            } else {
                lessonContent.innerHTML = '<p>Content for this lesson is not available yet.</p>';
            }
            
            // Update navigation buttons
            updateNavButtons();
            
            // Check if lesson is completed
            if (completedLessons.includes(lessonId)) {
                completeBtn.disabled = true;
                completeBtn.innerHTML = '<i class="fas fa-check-circle"></i> Completed';
            } else {
                completeBtn.disabled = false;
                completeBtn.innerHTML = '<i class="fas fa-check-circle"></i> Mark as Complete';
            }
            
            // Show lesson content section
            lessonContentSection.style.display = 'block';
            
            // Scroll to lesson content
            lessonContentSection.scrollIntoView({ behavior: 'smooth' });
        };
        
        // Update navigation buttons
        function updateNavButtons() {
            if (!currentLesson) return;
            
            const { moduleIndex, lessonIndex } = currentLesson;
            
            // Previous button
            if (moduleIndex === 0 && lessonIndex === 0) {
                // First lesson in first module
                prevLessonBtn.disabled = true;
            } else {
                prevLessonBtn.disabled = false;
            }
            
            // Next button
            if (moduleIndex === modules.length - 1 && lessonIndex === modules[moduleIndex].lessons.length - 1) {
                // Last lesson in last module
                nextLessonBtn.disabled = true;
            } else {
                nextLessonBtn.disabled = false;
            }
        }
        
        // Go to previous lesson
        prevLessonBtn.addEventListener('click', function() {
            if (!currentLesson || prevLessonBtn.disabled) return;
            
            const { moduleIndex, lessonIndex } = currentLesson;
            
            if (lessonIndex > 0) {
                // Previous lesson in same module
                showLesson(modules[moduleIndex].lessons[lessonIndex - 1].id);
            } else if (moduleIndex > 0) {
                // Last lesson in previous module
                const prevModule = modules[moduleIndex - 1];
                showLesson(prevModule.lessons[prevModule.lessons.length - 1].id);
            }
        });
        
        // Go to next lesson
        nextLessonBtn.addEventListener('click', function() {
            if (!currentLesson || nextLessonBtn.disabled) return;
            
            const { moduleIndex, lessonIndex } = currentLesson;
            
            if (lessonIndex < modules[moduleIndex].lessons.length - 1) {
                // Next lesson in same module
                showLesson(modules[moduleIndex].lessons[lessonIndex + 1].id);
            } else if (moduleIndex < modules.length - 1) {
                // First lesson in next module
                showLesson(modules[moduleIndex + 1].lessons[0].id);
            }
        });
        
        // Mark lesson as complete
        completeBtn.addEventListener('click', function() {
            if (!currentLesson) return;
            
            const lessonId = currentLesson.id;
            
            // Check if already completed
            if (completedLessons.includes(lessonId)) return;
            
            // Add to completed lessons
            completedLessons.push(lessonId);
            
            // Save progress to localStorage
            saveQuizProgress();
            
            // Update UI
            completeBtn.disabled = true;
            completeBtn.innerHTML = '<i class="fas fa-check-circle"></i> Completed';
            
            // Update lesson status icon
            const statusIcon = document.getElementById(`status-${lessonId}`);
            if (statusIcon) {
                statusIcon.classList.remove('far', 'fa-circle');
                statusIcon.classList.add('fas', 'fa-check-circle');
            }
            
            // Show success message
            alert('Lesson completed! Your progress has been saved.');
        });
        
        // Check quiz answer
        window.checkAnswer = function(button, questionId) {
            const correctOption = button.getAttribute('data-correct');
            const selectedOption = document.querySelector(`input[name="quiz${questionId}"]:checked`);
            
            if (!selectedOption) {
                alert('Please select an answer.');
                return;
            }
            
            const isCorrect = selectedOption.value === correctOption;
            const feedbackDiv = button.previousElementSibling;
            
            // Show feedback
            feedbackDiv.style.display = 'block';
            
            if (isCorrect) {
                feedbackDiv.querySelector('.correct-feedback').style.display = 'block';
                feedbackDiv.querySelector('.incorrect-feedback').style.display = 'none';
            } else {
                feedbackDiv.querySelector('.correct-feedback').style.display = 'none';
                feedbackDiv.querySelector('.incorrect-feedback').style.display = 'block';
            }
            
            // Disable button
            button.disabled = true;
        };
        
        // Update lesson status icons for completed lessons
        function updateLessonStatusIcons() {
            completedLessons.forEach(lessonId => {
                const statusIcon = document.getElementById(`status-${lessonId}`);
                if (statusIcon) {
                    statusIcon.classList.remove('far', 'fa-circle');
                    statusIcon.classList.add('fas', 'fa-check-circle');
                    
                    // Also update the text next to the icon
                    const statusSpan = statusIcon.nextElementSibling;
                    if (statusSpan) {
                        statusSpan.textContent = 'Completed';
                        statusSpan.style.color = 'var(--primary)';
                    }
                }
            });
        }
        
        // Initialize
        updateLessonStatusIcons();
    });
</script>
