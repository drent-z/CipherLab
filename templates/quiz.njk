---
layout: layout.njk
title: Cryptography Quiz - CipherLab
---
<section class="hero" id="quiz-hero">
    <div class="hero-gradient-container"></div>
    <div class="row hero-row">
        <div class="col-12 text-center">
            <h1 class="page-heading">Cryptography Quiz</h1>
            <div class="hero-content">
                <p class="mb-4 fade-in hero-subtitle">Test your cryptography knowledge and skills</p>
            </div>
        </div>
    </div>
</section>

<section class="container section">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <!-- Redesigned Quiz Container -->
            <div id="quiz-container" class="quiz-container">
                <div class="quiz-card">
                    <!-- Quiz Header -->
                    <div class="quiz-header">
                        <div class="quiz-icon">
                            <i class="fas fa-trophy"></i>
                        </div>
                        <div class="quiz-info">
                            <h3>Final Knowledge Quiz</h3>
                            <p>Test your understanding of cryptography concepts</p>
                        </div>
                        <div class="quiz-status">
                            <span id="quiz-status-text">Unl<span id="secret-pass-trigger" style="cursor: default;">o</span>cked</span>
                            <i class="fas fa-unlock" id="quiz-lock-icon"></i>
                        </div>
                    </div>
                    
                    <!-- Quiz Content Area -->
                    <div class="quiz-content">
                        <!-- Introduction Screen -->
                        <div id="quiz-intro" class="quiz-section">
                            <p>Ready to test your knowledge of cryptography? This comprehensive quiz covers all the topics from our lessons:</p>
                            <ul>
                                <li>Fundamentals of Cryptography</li>
                                <li>Classical Ciphers</li>
                                <li>Modern Cryptography</li>
                                <li>Applications</li>
                                <li>Advanced Topics</li>
                            </ul>
                            <p>The quiz consists of 30 questions with 6 questions from each module. You need to score at least 70% to pass the quiz and demonstrate your understanding of cryptography concepts.</p>
                            <p>Good luck!</p>
                            
                            <div class="quiz-start-container">
                                <button id="start-quiz-btn" class="primary-button">
                                    <i class="fas fa-play"></i> Start Quiz
                                </button>
                            </div>
                        </div>
                        
                        <!-- Questions Screen -->
                        <div id="quiz-questions" class="quiz-section" style="display: none;">
                            <div class="question-container">
                                <h4 id="question-text" class="question-text">Question text appears here</h4>
                                
                                <div id="options-container" class="options-container">
                                    <!-- Options will be added dynamically -->
                                </div>
                                
                                <div class="question-navigation">
                                    <button id="prev-question" class="nav-button">
                                        <i class="fas fa-chevron-left"></i> Previous
                                    </button>
                                    <div class="question-progress">
                                        <span id="current-question">1</span>/<span id="total-questions">30</span>
                                    </div>
                                    <button id="next-question" class="nav-button">
                                        Next <i class="fas fa-chevron-right"></i>
                                    </button>
                                </div>
                                
                                <div class="submit-container">
                                    <button id="submit-quiz" class="primary-button" style="display: none;">
                                        <i class="fas fa-check"></i> Submit Answers
                                    </button>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Results Screen -->
                        <div id="quiz-results" class="quiz-section" style="display: none;">
                            <div class="results-header">
                                <h3>Quiz Results</h3>
                            </div>
                            
                            <div class="score-display">
                                <div class="score-circle">
                                    <span id="final-score">0</span>/<span id="max-score">30</span>
                                </div>
                                <div class="score-percentage">
                                    <span id="score-percentage">0%</span>
                                </div>
                            </div>
                            
                            <div id="pass-message" class="results-message" style="display: none;">
                                <i class="fas fa-check-circle"></i>
                                <h4>Congratulations!</h4>
                                <p>You've successfully completed the Cryptography Quiz. You now have a solid understanding of cryptographic principles and applications.</p>
                                <div class="achievement-container">
                                    <div class="achievement-level">
                                        <span id="achievement-level">Excellent Knowledge</span>
                                    </div>
                                </div>
                            </div>
                            
                            <div id="fail-message" class="results-message" style="display: none;">
                                <i class="fas fa-times-circle"></i>
                                <h4>Keep Learning</h4>
                                <p>You didn't quite reach the passing score of 70%. Review the modules and try again to strengthen your understanding of cryptography.</p>
                            </div>
                            
                            <div class="action-buttons">
                                <button id="retake-quiz" class="secondary-button">
                                    <i class="fas fa-redo"></i> Retake Quiz
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<style>
/* Quiz Container styling */
.quiz-container {
    margin: 2rem auto;
    max-width: 900px;
}

.quiz-card {
    background-color: var(--medium-dark);
    border-radius: 12px;
    border: 1px solid var(--primary);
    overflow: hidden;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
}

/* Quiz Header */
.quiz-header {
    display: flex;
    align-items: center;
    padding: 1.5rem 2rem;
    background-color: var(--light-dark);
    border-bottom: 1px solid var(--primary);
}

.quiz-icon {
    font-size: 2rem;
    color: var(--primary);
    margin-right: 1.5rem;
}

.quiz-info {
    flex-grow: 1;
}

.quiz-info h3 {
    margin: 0;
    color: var(--primary);
    font-size: 1.5rem;
}

.quiz-info p {
    margin: 0.5rem 0 0;
    color: var(--text-muted);
    font-size: 0.9rem;
}

.quiz-status {
    padding-left: 1rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.quiz-status i {
    color: var(--primary);
}

/* Quiz Content Area */
.quiz-content {
    padding: 2rem;
}

.quiz-section {
    padding: 1rem;
}

/* Introduction Screen */
#quiz-intro ul {
    margin: 1.5rem 0;
    padding-left: 2rem;
}

#quiz-intro li {
    margin-bottom: 0.5rem;
}

.quiz-start-container {
    margin-top: 2rem;
    text-align: center;
}

/* Questions Screen */
.question-container {
    max-width: 800px;
    margin: 0 auto;
}

.question-text {
    text-align: center;
    margin-bottom: 2rem;
    font-size: 1.3rem;
    color: var(--text);
}

.options-container {
    margin-bottom: 2rem;
}

.option {
    background-color: var(--dark);
    border: 1px solid var(--primary-dark);
    border-radius: 8px;
    padding: 1rem 1.25rem;
    margin-bottom: 1rem;
    cursor: pointer;
    display: flex;
    align-items: center;
    transition: all 0.2s ease;
}

.option:hover {
    background-color: var(--light-dark);
    transform: translateY(-2px);
}

.option.selected {
    background-color: var(--primary-dark);
    border-color: var(--primary);
    color: var(--dark);
}

.option-radio {
    display: inline-block;
    width: 20px;
    height: 20px;
    border: 2px solid var(--primary);
    border-radius: 50%;
    margin-right: 1rem;
    position: relative;
}

.option.selected .option-radio:after {
    content: '';
    position: absolute;
    width: 10px;
    height: 10px;
    background: var(--dark);
    border-radius: 50%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.question-navigation {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 2rem 0;
}

.question-progress {
    font-size: 1.1rem;
    color: var(--text-muted);
}

.nav-button {
    background-color: transparent;
    border: 1px solid var(--primary);
    color: var(--primary);
    padding: 0.6rem 1.2rem;
    border-radius: 6px;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.2s ease;
}

.nav-button:hover {
    background-color: var(--primary);
    color: var(--dark);
}

.nav-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

.submit-container {
    text-align: center;
    margin-top: 2rem;
}

/* Results Screen */
.results-header {
    text-align: center;
    margin-bottom: 2rem;
}

.score-display {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: 3rem;
}

.score-circle {
    width: 120px;
    height: 120px;
    border-radius: 50%;
    background-color: var(--dark);
    border: 4px solid var(--primary);
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 1.8rem;
    color: var(--primary);
    margin-bottom: 1rem;
}

.score-percentage {
    font-size: 2rem;
    color: var(--primary);
    font-weight: bold;
}

.results-message {
    text-align: center;
    padding: 2rem;
    margin-bottom: 2rem;
    border-radius: 8px;
}

.results-message i {
    font-size: 3rem;
    margin-bottom: 1rem;
}

#pass-message i {
    color: var(--primary);
}

#fail-message i {
    color: #ff3b30;
}

.achievement-container {
    margin-top: 1.5rem;
}

.achievement-level {
    display: inline-block;
    background-color: var(--primary);
    color: var(--dark);
    padding: 0.5rem 1.5rem;
    border-radius: 30px;
    font-weight: bold;
}

.action-buttons {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-top: 2rem;
}

/* Button Styles */
.primary-button {
    background: linear-gradient(45deg, var(--primary-dark), var(--primary));
    color: var(--dark);
    border: none;
    padding: 0.8rem 2rem;
    border-radius: 8px;
    font-weight: bold;
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.2s ease;
}

.primary-button:hover {
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(0, 255, 65, 0.4);
}

.secondary-button {
    background-color: transparent;
    border: 1px solid var(--primary);
    color: var(--primary);
    padding: 0.8rem 2rem;
    border-radius: 8px;
    font-weight: bold;
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.2s ease;
}

.secondary-button:hover {
    background-color: var(--primary);
    color: var(--dark);
}

/* Responsive Adjustments */
@media (max-width: 768px) {
    .quiz-header {
        flex-direction: column;
        text-align: center;
        padding: 1.5rem 1rem;
    }
    
    .quiz-icon {
        margin-right: 0;
        margin-bottom: 1rem;
    }
    
    .quiz-status {
        margin-top: 1rem;
        padding-left: 0;
    }
    
    .quiz-content {
        padding: 1.5rem 1rem;
    }
    
    .question-navigation {
        flex-direction: column;
        gap: 1rem;
    }
    
    .nav-button {
        width: 100%;
        justify-content: center;
    }
    
    .score-circle {
        width: 100px;
        height: 100px;
        font-size: 1.5rem;
    }
    
    .score-percentage {
        font-size: 1.8rem;
    }
}
</style>

<script>
// Quiz Data - Questions and Answers
const quizData = [
    // Module 1: Fundamentals of Cryptography
    {
        module: "Fundamentals",
        question: "What is the main purpose of cryptography?",
        options: [
            "To create computer games",
            "To secure information",
            "To speed up computer processing",
            "To develop new programming languages"
        ],
        correctAnswer: 1
    },
    {
        module: "Fundamentals",
        question: "Which of these is NOT a main goal of cryptography?",
        options: [
            "Confidentiality",
            "Integrity",
            "Authentication",
            "Compression"
        ],
        correctAnswer: 3
    },
    {
        module: "Fundamentals",
        question: "What does the term 'non-repudiation' mean in cryptography?",
        options: [
            "The ability to deny sending a message",
            "The inability to deny sending a message",
            "The ability to decrypt any message",
            "The ability to encrypt any message without a key"
        ],
        correctAnswer: 1
    },
    {
        module: "Fundamentals",
        question: "In what ancient civilization was the scytale, one of the first cryptographic devices, used?",
        options: [
            "Ancient Egypt",
            "Roman Empire",
            "Ancient Sparta",
            "Mesopotamia"
        ],
        correctAnswer: 2
    },
    {
        module: "Fundamentals",
        question: "Which of these best describes plaintext?",
        options: [
            "Text that is formatted in a simple way",
            "Text that has been encrypted",
            "The original, unencrypted message",
            "Text that can only be read by authorized users"
        ],
        correctAnswer: 2
    },
    {
        module: "Fundamentals",
        question: "What happens if cryptographic keys are stolen or compromised?",
        options: [
            "Nothing, since keys are just one part of security",
            "The encrypted data becomes temporarily inaccessible",
            "The security of the encrypted data is compromised",
            "The data automatically self-destructs"
        ],
        correctAnswer: 2
    },
    
    // Module 2: Classical Ciphers
    {
        module: "Classical Ciphers",
        question: "In the Caesar cipher, what happens when shifting the letter Z by 1?",
        options: [
            "It becomes Y",
            "It becomes A",
            "It remains Z",
            "It becomes a number"
        ],
        correctAnswer: 1
    },
    {
        module: "Classical Ciphers",
        question: "What makes the Vigenère cipher stronger than the Caesar cipher?",
        options: [
            "It uses multiple shift values based on a keyword",
            "It uses larger numbers",
            "It was invented later in history",
            "It can only be used by governments"
        ],
        correctAnswer: 0
    },
    {
        module: "Classical Ciphers",
        question: "Which technique was historically used to break substitution ciphers?",
        options: [
            "Brute force attacks",
            "Frequency analysis",
            "Dictionary attacks",
            "Differential cryptanalysis"
        ],
        correctAnswer: 1
    },
    {
        module: "Classical Ciphers",
        question: "Who is credited with using the Caesar cipher in military communications?",
        options: [
            "Alexander the Great",
            "Julius Caesar",
            "Genghis Khan",
            "Napoleon Bonaparte"
        ],
        correctAnswer: 1
    },
    {
        module: "Classical Ciphers",
        question: "What is the main vulnerability of simple substitution ciphers?",
        options: [
            "They are too complex to implement correctly",
            "They preserve the frequency patterns of the original language",
            "They require too much computational power",
            "They can only encrypt short messages"
        ],
        correctAnswer: 1
    },
    {
        module: "Classical Ciphers",
        question: "The Enigma machine used in World War II is an example of what type of cipher?",
        options: [
            "A simple substitution cipher",
            "A polyalphabetic cipher with mechanical implementation",
            "A one-time pad",
            "A block cipher"
        ],
        correctAnswer: 1
    },
    
    // Module 3: Modern Cryptography
    {
        module: "Modern Cryptography",
        question: "Which encryption type uses different keys for encryption and decryption?",
        options: [
            "Symmetric encryption",
            "Asymmetric encryption",
            "Hash functions",
            "Substitution ciphers"
        ],
        correctAnswer: 1
    },
    {
        module: "Modern Cryptography",
        question: "What is a hash function primarily used for?",
        options: [
            "Encrypting data for secure transmission",
            "Verifying data integrity and creating fixed-size representations",
            "Securing email communications",
            "Generating random numbers"
        ],
        correctAnswer: 1
    },
    {
        module: "Modern Cryptography",
        question: "Which of these is an example of a symmetric encryption algorithm?",
        options: [
            "RSA",
            "AES",
            "ECC",
            "Diffie-Hellman"
        ],
        correctAnswer: 1
    },
    {
        module: "Modern Cryptography",
        question: "What is the main advantage of asymmetric encryption over symmetric encryption?",
        options: [
            "It's faster",
            "It uses smaller keys",
            "It solves the key distribution problem",
            "It provides stronger encryption"
        ],
        correctAnswer: 2
    },
    {
        module: "Modern Cryptography",
        question: "What security property does a good hash function NOT have?",
        options: [
            "Deterministic output",
            "Collision resistance",
            "Reversibility",
            "Avalanche effect"
        ],
        correctAnswer: 2
    },
    {
        module: "Modern Cryptography",
        question: "What does AES stand for?",
        options: [
            "Advanced Encryption System",
            "Advanced Encryption Standard",
            "Automated Encryption Service",
            "Algorithmic Encryption System"
        ],
        correctAnswer: 1
    },
    
    // Module 4: Applications
    {
        module: "Applications",
        question: "Which of these is a practical application of asymmetric encryption?",
        options: [
            "Full disk encryption",
            "Password storage",
            "Digital signatures",
            "Streaming video encryption"
        ],
        correctAnswer: 2
    },
    {
        module: "Applications",
        question: "What technology underlies cryptocurrencies like Bitcoin?",
        options: [
            "Virtual private networks",
            "Blockchain",
            "Quantum encryption",
            "Steganography"
        ],
        correctAnswer: 1
    },
    {
        module: "Applications",
        question: "What does HTTPS use to secure web communications?",
        options: [
            "A VPN tunnel",
            "A combination of TLS/SSL protocols with asymmetric and symmetric encryption",
            "Only symmetric encryption",
            "Steganography to hide data in images"
        ],
        correctAnswer: 1
    },
    {
        module: "Applications",
        question: "In the context of secure communications, what does 'end-to-end encryption' mean?",
        options: [
            "The encryption algorithm runs from start to finish",
            "Only the sender and recipient can read the messages",
            "The message is encrypted twice for extra security",
            "The entire network path is encrypted"
        ],
        correctAnswer: 1
    },
    {
        module: "Applications",
        question: "What is the main purpose of a digital signature?",
        options: [
            "To encrypt a document",
            "To compress a document for faster transmission",
            "To verify the identity of the sender and ensure document integrity",
            "To timestamp when a document was created"
        ],
        correctAnswer: 2
    },
    {
        module: "Applications",
        question: "How does blockchain technology ensure data integrity?",
        options: [
            "By using supercomputers to verify data",
            "By requiring government approval for all transactions",
            "By chaining blocks with cryptographic hashes and distributed validation",
            "By limiting access to authorized users only"
        ],
        correctAnswer: 2
    },
    
    // Module 5: Advanced Topics
    {
        module: "Advanced Topics",
        question: "What is quantum cryptography based on?",
        options: [
            "Faster computers",
            "The laws of quantum mechanics",
            "Historical ciphers",
            "Advanced mathematics only"
        ],
        correctAnswer: 1
    },
    {
        module: "Advanced Topics",
        question: "What is the unique capability of homomorphic encryption?",
        options: [
            "Performing computations on encrypted data without decrypting it",
            "Creating unbreakable encryption",
            "Reducing the size of encrypted files",
            "Faster encryption and decryption"
        ],
        correctAnswer: 0
    },
    {
        module: "Advanced Topics",
        question: "Which algorithm poses a significant threat to RSA encryption if implemented on a quantum computer?",
        options: [
            "Shor's algorithm",
            "Grover's algorithm",
            "Deutsch-Jozsa algorithm",
            "Quantum Fourier Transform"
        ],
        correctAnswer: 0
    },
    {
        module: "Advanced Topics",
        question: "What is a zero-knowledge proof used for?",
        options: [
            "Encrypting data with zero knowledge of the recipient",
            "Proving you know something without revealing what you know",
            "Creating encryption with zero processing overhead",
            "Decrypting data without a key"
        ],
        correctAnswer: 1
    },
    {
        module: "Advanced Topics",
        question: "Which of these is considered 'post-quantum cryptography'?",
        options: [
            "RSA with larger key sizes",
            "Elliptic curve cryptography",
            "Lattice-based cryptography",
            "Triple DES"
        ],
        correctAnswer: 2
    },
    {
        module: "Advanced Topics",
        question: "What is the main principle behind Quantum Key Distribution (QKD)?",
        options: [
            "Using quantum superposition to create unbreakable keys",
            "Using the observer effect to detect eavesdropping",
            "Using quantum entanglement to transmit data faster than light",
            "Using quantum tunneling to bypass encryption"
        ],
        correctAnswer: 1
    }
];

// Simple Quiz Implementation
document.addEventListener('DOMContentLoaded', function() {
    // Quiz Variables
    let currentQuestion = 0;
    let userAnswers = Array(quizData.length).fill(null);
    let quizStarted = false;
    
    // Elements
    const startButton = document.getElementById('start-quiz-btn');
    const prevButton = document.getElementById('prev-question');
    const nextButton = document.getElementById('next-question');
    const submitButton = document.getElementById('submit-quiz');
    const retakeButton = document.getElementById('retake-quiz');
    const secretTrigger = document.getElementById('secret-pass-trigger');
    
    // Sections
    const introSection = document.getElementById('quiz-intro');
    const questionsSection = document.getElementById('quiz-questions');
    const resultsSection = document.getElementById('quiz-results');
    
    // Question Elements
    const questionText = document.getElementById('question-text');
    const optionsContainer = document.getElementById('options-container');
    const currentQuestionEl = document.getElementById('current-question');
    const totalQuestionsEl = document.getElementById('total-questions');
    
    // Results Elements
    const finalScoreEl = document.getElementById('final-score');
    const maxScoreEl = document.getElementById('max-score');
    const scorePercentageEl = document.getElementById('score-percentage');
    const passMessageEl = document.getElementById('pass-message');
    const failMessageEl = document.getElementById('fail-message');
    const achievementLevelEl = document.getElementById('achievement-level');
    
    // Initialize Quiz
    function initQuiz() {
        // Reset variables
        currentQuestion = 0;
        userAnswers = Array(quizData.length).fill(null);
        quizStarted = false;
        
        // Show intro section
        introSection.style.display = 'block';
        questionsSection.style.display = 'none';
        resultsSection.style.display = 'none';
        
        // Set total questions
        if (totalQuestionsEl) {
            totalQuestionsEl.textContent = quizData.length;
        }
    }
    
    // Start Quiz
    function startQuiz() {
        quizStarted = true;
        introSection.style.display = 'none';
        questionsSection.style.display = 'block';
        resultsSection.style.display = 'none';
        
        // Load first question
        loadQuestion();
    }
    
    // Load Current Question
    function loadQuestion() {
        // Update question number
        if (currentQuestionEl) {
            currentQuestionEl.textContent = currentQuestion + 1;
        }
        
        // Update buttons state
        prevButton.disabled = currentQuestion === 0;
        nextButton.disabled = currentQuestion === quizData.length - 1;
        
        // Show/hide submit button on last question
        submitButton.style.display = currentQuestion === quizData.length - 1 ? 'inline-flex' : 'none';
        
        // Set question text
        questionText.textContent = quizData[currentQuestion].question;
        
        // Clear options
        optionsContainer.innerHTML = '';
        
        // Add options
        quizData[currentQuestion].options.forEach((option, index) => {
            const optionEl = document.createElement('div');
            optionEl.className = 'option';
            if (userAnswers[currentQuestion] === index) {
                optionEl.classList.add('selected');
            }
            
            optionEl.innerHTML = `
                <span class="option-radio"></span>
                <span class="option-text">${option}</span>
            `;
            
            optionEl.addEventListener('click', () => {
                // Remove selected class from all options
                document.querySelectorAll('.option').forEach(el => {
                    el.classList.remove('selected');
                });
                
                // Add selected class to clicked option
                optionEl.classList.add('selected');
                
                // Save answer
                userAnswers[currentQuestion] = index;
            });
            
            optionsContainer.appendChild(optionEl);
        });
    }
    
    // Calculate score and show results
    function showResults() {
        let score = 0;
        
        // Calculate score
        for (let i = 0; i < quizData.length; i++) {
            if (userAnswers[i] === quizData[i].correctAnswer) {
                score++;
            }
        }
        
        // Calculate percentage
        const percentage = Math.round((score / quizData.length) * 100);
        
        // Update result elements
        finalScoreEl.textContent = score;
        maxScoreEl.textContent = quizData.length;
        scorePercentageEl.textContent = `${percentage}%`;
        
        // Show appropriate message
        if (percentage >= 70) {
            passMessageEl.style.display = 'block';
            failMessageEl.style.display = 'none';
            
            // Set achievement level
            if (percentage >= 90) {
                achievementLevelEl.textContent = 'Cryptography Expert';
            } else if (percentage >= 80) {
                achievementLevelEl.textContent = 'Advanced Knowledge';
            } else {
                achievementLevelEl.textContent = 'Good Understanding';
            }
        } else {
            passMessageEl.style.display = 'none';
            failMessageEl.style.display = 'block';
        }
        
        // Show results section
        introSection.style.display = 'none';
        questionsSection.style.display = 'none';
        resultsSection.style.display = 'block';
        
        // Save results in session storage (not localStorage)
        try {
            const quizResult = {
                completed: true,
                passed: percentage >= 70,
                score: score,
                totalQuestions: quizData.length,
                percentage: percentage,
                userAnswers: userAnswers,
                completedDate: new Date().toISOString()
            };
            
            sessionStorage.setItem('quizResults', JSON.stringify(quizResult));
        } catch (e) {
            console.error('Error saving quiz results:', e);
        }
    }
    
    // Auto-pass quiz function
    function autoPassQuiz() {
        // Show notification
        const notification = document.createElement('div');
        notification.innerHTML = '<i class="fas fa-trophy"></i> Quiz Auto-Passed!';
        notification.style.position = 'fixed';
        notification.style.top = '20px';
        notification.style.left = '50%';
        notification.style.transform = 'translateX(-50%)';
        notification.style.backgroundColor = 'var(--primary)';
        notification.style.color = 'var(--dark)';
        notification.style.padding = '12px 24px';
        notification.style.borderRadius = '8px';
        notification.style.fontWeight = 'bold';
        notification.style.zIndex = '9999';
        notification.style.boxShadow = '0 4px 12px rgba(0,0,0,0.2)';
        document.body.appendChild(notification);
        
        // Set all answers to correct answers
        userAnswers = quizData.map(q => q.correctAnswer);
        
        // Show perfect score results
        finalScoreEl.textContent = quizData.length;
        maxScoreEl.textContent = quizData.length;
        scorePercentageEl.textContent = '100%';
        passMessageEl.style.display = 'block';
        failMessageEl.style.display = 'none';
        achievementLevelEl.textContent = 'Cryptography Expert';
        
        // Show results section
        introSection.style.display = 'none';
        questionsSection.style.display = 'none';
        resultsSection.style.display = 'block';
        
        // Remove notification after 3 seconds
        setTimeout(() => {
            document.body.removeChild(notification);
        }, 3000);
        
        // Save results
        try {
            const quizResult = {
                completed: true,
                passed: true,
                score: quizData.length,
                totalQuestions: quizData.length,
                percentage: 100,
                userAnswers: userAnswers,
                completedDate: new Date().toISOString()
            };
            
            sessionStorage.setItem('quizResults', JSON.stringify(quizResult));
        } catch (e) {
            console.error('Error saving quiz results:', e);
        }
    }
    
    // Event Listeners
    
    // Start Quiz
    startButton.addEventListener('click', startQuiz);
    
    // Navigation Buttons
    prevButton.addEventListener('click', () => {
        if (currentQuestion > 0) {
            currentQuestion--;
            loadQuestion();
        }
    });
    
    nextButton.addEventListener('click', () => {
        if (currentQuestion < quizData.length - 1) {
            currentQuestion++;
            loadQuestion();
        }
    });
    
    // Submit Quiz
    submitButton.addEventListener('click', () => {
        // Check if all questions are answered
        const unansweredQuestions = userAnswers.reduce((acc, answer, index) => {
            if (answer === null) acc.push(index + 1);
            return acc;
        }, []);
        
        if (unansweredQuestions.length > 0) {
            if (!confirm(`You have ${unansweredQuestions.length} unanswered questions. Would you like to submit anyway?`)) {
                return;
            }
        }
        
        showResults();
    });
    
    // Retake Quiz
    retakeButton.addEventListener('click', () => {
        initQuiz();
        startQuiz();
    });
    
    // Secret Trigger
    let clickCount = 0;
    secretTrigger.addEventListener('click', (e) => {
        e.preventDefault();
        e.stopPropagation();
        clickCount++;
        
        // Visual feedback
        secretTrigger.style.color = 'var(--primary)';
        setTimeout(() => secretTrigger.style.color = '', 300);
        
        if (clickCount >= 3) {
            clickCount = 0;
            autoPassQuiz();
        }
    });
    
    // Initialize Quiz
    initQuiz();
});
</script>